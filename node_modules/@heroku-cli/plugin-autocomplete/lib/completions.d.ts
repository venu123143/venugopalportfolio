import { Interfaces } from '@oclif/core';
export declare const oneDay: number;
export declare const herokuGet: (resource: string, ctx: Interfaces.CompletionContext) => Promise<string[]>;
export declare const AppCompletion: Interfaces.Completion;
export declare const AppAddonCompletion: Interfaces.Completion;
export declare const AppDynoCompletion: Interfaces.Completion;
export declare const BuildpackCompletion: Interfaces.Completion;
export declare const DynoSizeCompletion: Interfaces.Completion;
export declare const FileCompletion: Interfaces.Completion;
export declare const PipelineCompletion: Interfaces.Completion;
export declare const ProcessTypeCompletion: Interfaces.Completion;
export declare const RegionCompletion: Interfaces.Completion;
export declare const RemoteCompletion: Interfaces.Completion;
export declare const RoleCompletion: Interfaces.Completion;
export declare const ScopeCompletion: Interfaces.Completion;
export declare const SpaceCompletion: Interfaces.Completion;
export declare const StackCompletion: Interfaces.Completion;
export declare const StageCompletion: Interfaces.Completion;
export declare const TeamCompletion: Interfaces.Completion;
export declare const CompletionMapping: {
    [key: string]: Interfaces.Completion;
};
export declare class CompletionLookup {
    private readonly cmdId;
    private readonly name;
    private readonly description?;
    private get key();
    private readonly blocklistMap;
    private readonly keyAliasMap;
    private readonly commandArgsMap;
    constructor(cmdId: string, name: string, description?: string | undefined);
    run(): Interfaces.Completion | undefined;
    private argAlias;
    private keyAlias;
    private descriptionAlias;
    private blocklisted;
}
